from sklearn.model_selection import train_test_split
 from sklearn.linear_model import LogisticRegression
 import pandas as pd
# Create 'User' Data set
 data = {
 'User ID': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
 'Gender': ['Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 
'Female', 'Male', 'Female'],
 'Age': [20, 25, 30, 35, 40, 45, 50, 55, 60, 65],
 'Estimated Salary': [45000, 50000, 60000, 80000, 110000, 150000, 200000, 
300000, 500000, 1000000],
 'Purchased': [0, 0, 0, 0, 1, 1, 1, 1, 1, 1]
 }
 df = pd.DataFrame(data)
 # Convert 'Gender' to numerical values
 df['Gender'] = df['Gender'].map({'Male': 0, 'Female': 1})
 # Identify independent and target variable
 X = df[['Gender', 'Age', 'Estimated Salary']]
 y = df['Purchased']
 # Split the variables into training and testing sets
 X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, 
random_state=0)
 # Print the training and testing sets
 print("Training set:")
 print("X_train:")
 print(X_train)
 print("y_train:")
 print(y_train)
 print("\\nTesting set:")
 print("X_test:")
 print(X_test)
 print("y_test:")
 print(y_test)
 # Build a logistic regression model
 classifier = LogisticRegression(random_state=0)
 classifier.fit(X_train, y_train)
 # Print the coefficients of the model
 print("\\nCoefficients of the logistic regression model:")
 print("Intercept:", classifier.intercept_)
 print("Slope:", classifier.coef_)
